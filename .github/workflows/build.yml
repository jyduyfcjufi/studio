# This GitHub workflow builds the Android APK and handles build artifacts.
#
# On success: It uploads the generated Debug APK.
# On failure: It uploads a text file containing the build error logs.

name: Android CI Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up JDK 17, which is required by the project
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Grant execute permission to the Gradle wrapper script
      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      # 4. Run the Gradle build and capture the output to a log file
      #    continue-on-error: true ensures that even if this step fails,
      #    the subsequent steps for uploading logs will still run.
      - name: Build with Gradle
        id: build_step
        run: ./gradlew assembleDebug > build_log.txt 2>&1
        continue-on-error: true

      # 5. Upload the generated APK if the build was successful
      - name: Upload APK on success
        if: steps.build_step.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7 # Keep the artifact for 7 days

      # 6. Upload the build log if the build failed
      - name: Upload build log on failure
        if: steps.build_step.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build_log.txt
          retention-days: 14 # Keep failure logs for longer

      # 7. Explicitly fail the workflow if the build step failed
      #    This is necessary because of `continue-on-error: true` in the build step.
      - name: Fail workflow on build failure
        if: steps.build_step.outcome == 'failure'
        run: exit 1
